---
- name: Perform RHEL In-Place Upgrade
  hosts: "{{ upgrade_group | default(omit) }}"
  strategy: free
  become: true
  force_handlers: true
  tasks:
    - name: Show current and target RHEL releases
      ansible.builtin.debug:
        msg:
          - "Current version of RHEL is {{ ansible_distribution_major_version }}"
          - "Target version of RHEL is {{ ipu_target | default('Not defined') }}"

    - name: If already at target major release exit this playbook
      ansible.builtin.meta: end_play
      when:
        - ipu_target is defined
        - ansible_distribution_major_version | int == ipu_target | int

    - name: Include vars depending on current OS
      ansible.builtin.include_vars: "{{ lookup('ansible.builtin.first_found', params) }}"
      vars:
        params:
          files:
            - 'RHEL-{{ ansible_distribution_major_version }}.yaml'
          paths:
            - 'vars'

    - name: Disable all repos if skipping latest 6.10 release
      ansible.builtin.shell: |
        set -o pipefail
        subscription-manager repos --disable \*
        subscription-manager repos --enable rhel-6-server-extras-rpms
      args:
        executable: /bin/bash
      when:
        - skip_latest_rhel7 is defined
        - skip_latest_rhel7 == 'yes'
        - ansible_distribution_major_version | int == 6

    - name: Disable all repos if skipping latest 7.9 release
      ansible.builtin.shell: |
        set -o pipefail
        subscription-manager repos --disable \*
        subscription-manager repos --enable rhel-7-server-extras-rpms
      args:
        executable: /bin/bash
      when:
        - skip_latest_rhel7 is defined
        - skip_latest_rhel7 == 'yes'
        - ansible_distribution_major_version | int == 7

    - name: Perform OS upgrade using leapp.upgrade
      ansible.builtin.import_role:
        name: infra.leapp.upgrade
...
